// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Products {
  id                 String               @id @default(uuid())
  title              String               @unique @db.VarChar(30)
  price              Decimal              @db.Decimal(11, 2)
  description        String               @db.VarChar(100)
  category           String               @db.VarChar(50)
  image              String               @db.VarChar(200)
  PurchaseOrderItems PurchaseOrderItems[]
  CartItems          CartItems[]

  @@map("products")
}

model Users {
  id             String           @id @default(uuid())
  email          String           @unique @db.VarChar(100)
  username       String           @unique @db.VarChar(50)
  password       String           @db.VarChar(50)
  first_name     String           @db.VarChar(50)
  last_name      String           @db.VarChar(50)
  PurchaseOrders PurchaseOrders[]
  Carts          Carts?

  @@map("users")
}

model Admins {
  id       String @id @default(uuid())
  username String @unique @db.VarChar(50)
  password String @db.VarChar(50)

  @@map("admins")
}

model PurchaseOrders {
  id                 String               @id @default(uuid())
  user_id            Users                @relation(fields: [usersId], references: [id])
  usersId            String
  date               DateTime             @default(now())
  PurchaseOrderItems PurchaseOrderItems[]

  @@map("purchase_orders")
}

model PurchaseOrderItems {
  id String @id @default(uuid())

  purchase_order_id PurchaseOrders @relation(fields: [purchaseOrdersId], references: [id])

  product_id       Products @relation(fields: [productsId], references: [id])
  productsId       String
  purchaseOrdersId String

  quantity Int     @default(0)
  price    Decimal @default(0.0) @db.Decimal(15, 2)

  @@map("purchase-order-items")
}

model Carts {
  id       String      @id @default(uuid())
  user     Users       @relation(fields: [userId], references: [id])
  userId   String      @unique
  total    Decimal     @default(0.0) @db.Decimal(15, 2)
  count    Int         @default(0)
  products CartItems[]

  @@map("carts")
}

model CartItems {
  id String @id @default(uuid())

  cart   Carts  @relation(fields: [cartId], references: [id])
  cartId String

  product    Products @relation(fields: [productsId], references: [id])
  productsId String

  quantity Int @default(0)

  @@map("carts-items")
}
